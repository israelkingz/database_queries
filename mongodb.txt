#Products Collection

[
  {
    "id": "1",
    "name": "iPhone 13",
    "category": "Electronics",
    "description": "The latest iPhone from Apple",
    "price": 999,
    "in_stock": true
  },

  {
    "id": "2",
    "name": "AirPods Pro",
    "category": "Electronics",
    "description": "Wireless earbuds with noise-cancellation",
    "price": 249,
    "in_stock": false
  },

  {
    "id": "3",
    "name": "MacBook Pro",
    "category": "Electronics",
    "description": "Powerful laptop from Apple",
    "price": 1999,
    "in_stock": true
  },
  {
    "id": "4",
    "name": "iPad Air",
    "category": "Electronics",
    "description": "Thin and light tablet from Apple",
    "price": 599,
    "in_stock": true
  },
  {
    "id": "5",
    "name": "Apple Watch Series 7",
    "category": "Electronics",
    "description": "Advanced smartwatch from Apple",
    "price": 399,
    "in_stock": true
  },
  {
    "id": "6",
    "name": "Nike Air Max 90",
    "category": "Shoes",
    "description": "Classic sneakers from Nike",
    "price": 120,
    "in_stock": true
  },
  {
    "id": "7",
    "name": "Levi's 501 Jeans",
    "category": "Clothing,
    "description": "smartphone from Samsung",
	"price": 799,
	"in_stock": true
},
{
"id": "8",
"name": "Bose QuietComfort Earbuds",
"category": "Electronics",
"description": "Wireless noise-cancelling earbuds from Bose",
"price": 279,
"in_stock": true
},
{
"id": "9",
"name": "Nintendo Switch",
"category": "Gaming",
"description": "Hybrid gaming console from Nintendo",
"price": 299,
"in_stock": false
},
{
"id": "10",
"name": "PlayStation 5",
"category": "Gaming",
"description": "Next-gen gaming console from Sony",
"price": 499,
"in_stock": false
},
{
"id": "11",
"name": "Xbox Series X",
"category": "Gaming",
"description": "Next-gen gaming console from Microsoft",
"price": 499,
"in_stock": false
},

{
"id": "12",
"name": "Lululemon Align Leggings",
"category": "Clothing",
"description": "Yoga pants from Lululemon",
"price": 98,
"in_stock": true
},
{
"id": "13",
"name": "Patagonia Better Sweater",
"category": "Clothing",
"description": "Warm and cozy sweater from Patagonia",
"price": 139,
"in_stock": false
},

{
"id": "14",
"name": "Apple TV 4K",
"category": "Electronics",
"description": "Streaming device from Apple",
"price": 179,
"in_stock": true
},
{
"id": "15",
"name": "Kindle Paperwhite",
"category": "Electronics",
"description": "E-reader from Amazon",
"price": 149,
"in_stock": true
},
{
"id": "16",
"name": "Fitbit Charge 5",
"category": "Electronics",
"description": "Fitness tracker from Fitbit",
"price": 179,
"in_stock": false
},
{
"id": "17",
"name": "GoPro HERO10 Black",
"category": "Electronics",
"description": "Advanced action camera from GoPro",
"price": 499,
"in_stock": true
},

{
"id": "18",
"name": "Iphone 12",
"category": "Phone",
"description": "One of the smarest kind of phone from Apple",
"price": 2000,
"in_stock": true
}, 

{
"id": "19",
"name": "Dell Elite book",
"category": "Laptop",
"description": "Most appreciate system model",
"price": 12500,
"in_stock": true
},
{
"id": "20",
"name": "Nexus Fan",
"category": "Electronics",
"description": "Advanced modern fans",
"price": 700,
"in_stock": true
}
]


Query 1: Retrieve all the products that are currently in stock.
db.products.find({ in_stock: true })

Query 2: Retrieve all the products that are out of stock.
db.products.find({ in_stock: false })

Query 3: Retrieve all the products that are in the "Electronics" category and have a price greater than or equal to $500.
db.products.find({ category: "Electronics", price: { $gte: 500 } })


Query 4: Retrieve all the products that are in the "Clothing" category and have a price less than or equal to $100.
db.products.find({ category: "Clothing", price: { $lte: 100 } })


Query 5: Retrieve all the products that have the word "Apple" in their name.
db.products.find({ name: /Apple/ })

Query 6: Retrieve all the products that have the word "gaming" in their description.
db.products.find({ description: /gaming/ })

Query 7: Retrieve the product with the highest price.
db.products.find().sort({ price: -1 }).limit(1)

Query 8: Retrieve the product with the lowest price.
db.products.find().sort({ price: 1 }).limit(1)

Query 9: Retrieve the total count of products that are currently in stock.
db.products.find({ in_stock: true }).count()

Query 10: Retrieve all the products sorted by their name in ascending order.
db.products.find().sort({ name: 1 })


